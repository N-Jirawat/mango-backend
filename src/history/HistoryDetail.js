import { useLocation, useNavigate } from "react-router-dom";
import { doc, deleteDoc } from "firebase/firestore";
import { db } from "../firebaseConfig";
import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';
import "../css/historyDetail.css";

function HistoryDetail() {
  const { state } = useLocation(); // ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ HistoryAnaly
  const navigate = useNavigate(); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á ‡πÜ

  if (!state) {
    return <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢</p>;
  }

  const { diseaseName, confidence, accuracy, symptoms, prevention, treatment, timestamp, imageUrl, docId } = state;

  const handleDelete = async () => {
    const confirmDelete = window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ?");
    if (!confirmDelete) return;

    try {
      // ‡∏•‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏à‡∏≤‡∏Å Firestore
      await deleteDoc(doc(db, "prediction_results", docId));
      alert("‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      navigate("/history"); // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ historyanaly ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    } catch (error) {
      console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö:", error);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
    }
  };

  const handleGoHome = () => {
    navigate('/history');
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF
  const handleDownloadPDF = async () => {
    try {
      // ‡∏´‡∏≤ element ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô PDF
      const element = document.querySelector('.details-container');
      if (!element) {
        alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡πÑ‡∏î‡πâ');
        return;
      }

      // ‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡πÉ‡∏ô PDF
      const buttons = element.querySelectorAll('button');
      const originalDisplay = [];
      buttons.forEach((btn, index) => {
        originalDisplay[index] = btn.style.display;
        btn.style.display = 'none';
      });

      // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ style ‡πÄ‡∏î‡∏¥‡∏°
      const originalStyles = {
        fontSize: element.style.fontSize,
        fontFamily: element.style.fontFamily,
        lineHeight: element.style.lineHeight
      };

      // ‡∏õ‡∏£‡∏±‡∏ö style ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö PDF
      element.style.fontSize = '18px';
      element.style.fontFamily = 'Arial, sans-serif';
      element.style.lineHeight = '1.8';

      // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
      const title = element.querySelector('h2');
      const originalTitleStyle = {};
      if (title) {
        originalTitleStyle.fontSize = title.style.fontSize;
        originalTitleStyle.fontWeight = title.style.fontWeight;
        title.style.fontSize = '24px';
        title.style.fontWeight = 'bold';
      }

      // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
      const detailItems = element.querySelectorAll('.details-item');
      const originalDetailStyles = [];
      detailItems.forEach((item, index) => {
        originalDetailStyles[index] = {
          fontSize: item.style.fontSize,
          marginBottom: item.style.marginBottom,
          lineHeight: item.style.lineHeight
        };
        item.style.fontSize = '14px';
        item.style.marginBottom = '20px';
        item.style.lineHeight = '1.6';

        const strong = item.querySelector('strong');
        if (strong) {
          originalDetailStyles[index].strongFontSize = strong.style.fontSize;
          strong.style.fontSize = '14px';
        }
      });

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á canvas ‡∏à‡∏≤‡∏Å HTML element
      const canvas = await html2canvas(element, {
        scale: 2, // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏°‡∏ä‡∏±‡∏î
        useCORS: true, // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å URL ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
        allowTaint: false,
        backgroundColor: '#ffffff'
      });

      // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ style ‡πÄ‡∏î‡∏¥‡∏°
      element.style.fontSize = originalStyles.fontSize;
      element.style.fontFamily = originalStyles.fontFamily;
      element.style.lineHeight = originalStyles.lineHeight;

      if (title) {
        title.style.fontSize = originalTitleStyle.fontSize;
        title.style.fontWeight = originalTitleStyle.fontWeight;
      }

      detailItems.forEach((item, index) => {
        item.style.fontSize = originalDetailStyles[index].fontSize;
        item.style.marginBottom = originalDetailStyles[index].marginBottom;
        item.style.lineHeight = originalDetailStyles[index].lineHeight;

        const strong = item.querySelector('strong');
        if (strong && originalDetailStyles[index].strongFontSize) {
          strong.style.fontSize = originalDetailStyles[index].strongFontSize;
        }
      });

      // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
      buttons.forEach((btn, index) => {
        btn.style.display = originalDisplay[index];
      });

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á PDF
      const pdf = new jsPDF('p', 'mm', 'a4');
      const imgData = canvas.toDataURL('image/png');

      // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ A4
      // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏¢‡∏∞‡∏Ç‡∏≠‡∏ö (‡πÄ‡∏ä‡πà‡∏ô 10 ‡∏°‡∏°. ‡∏ó‡∏±‡πâ‡∏á‡∏ã‡πâ‡∏≤‡∏¢-‡∏Ç‡∏ß‡∏≤ ‡πÅ‡∏•‡∏∞‡∏ö‡∏ô-‡∏•‡πà‡∏≤‡∏á)
      const marginX = 10;
      const marginY = 10;
      const pageWidth = 210;
      const pageHeight = 295;
      const imgWidth = pageWidth - marginX * 2;
      const imgHeight = (canvas.height * imgWidth) / canvas.width;
      let heightLeft = imgHeight;
      let position = marginY;

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
      pdf.addImage(imgData, 'PNG', marginX, position, imgWidth, imgHeight);
      heightLeft -= pageHeight;

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏´‡∏≤‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏¢‡∏≤‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
      while (heightLeft >= 0) {
        position = heightLeft - imgHeight + marginY;
        pdf.addPage();
        pdf.addImage(imgData, 'PNG', marginX, position, imgWidth, imgHeight);
        heightLeft -= pageHeight;
      }

      // ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå PDF
      const fileName = `‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÇ‡∏£‡∏Ñ_${diseaseName}_${new Date().toLocaleDateString('th-TH')}.pdf`;
      pdf.save(fileName);

    } catch (error) {
      console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á PDF:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á PDF');
    }
  };

  return (
    <div className="details-container">
      <div className="analyDetail-header">
        <button onClick={handleGoHome} className="back-button">
          ‚¨ÖÔ∏è ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
        </button>
      </div>
      <h2>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÇ‡∏£‡∏Ñ</h2>

      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ */}
      {imageUrl && <img src={imageUrl} alt="Uploaded" className="image-preview" />}

      <div className="details-item">
        <strong>‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏£‡∏Ñ:</strong> {diseaseName}
      </div>
      <div className="details-item">
        <strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à (confidence):</strong> {Math.round(confidence * 100)}%
      </div>
      <div className="details-item">
        <strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥ (accuracy):</strong>{" "}
        {typeof accuracy === "number" ? `${Math.round(accuracy * 100)}%` : "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}
      </div>
      <div className="details-item">
        <strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÇ‡∏£‡∏Ñ:</strong> {symptoms || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÇ‡∏£‡∏Ñ"}
      </div>
      <div className="details-item">
        <strong>‡∏ß‡∏¥‡∏ò‡∏µ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô:</strong> {prevention || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô"}
      </div>
      <div className="details-item">
        <strong>‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤:</strong> {treatment || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤"}
      </div>

      <div className="details-item"><strong className="t">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå:</strong> {
        timestamp?.seconds
          ? new Date(timestamp.seconds * 1000).toLocaleString("th-TH")
          : "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"
      }</div>

      <button onClick={handleDownloadPDF} className="download-pdf-btn">
          üìÑ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF
        </button>

      <div className="action-buttons">
        <button className="delete-btn" onClick={handleDelete}>
          üóëÔ∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        </button>
      </div>
    </div>
  );
}

export default HistoryDetail;